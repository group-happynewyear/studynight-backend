name: CI

on:
  push:
    branches: [ 'main' ]

permissions:
  contents: read
  actions: read
  packages: write

env:
  GITHUB_USERNAME: ${{ github.actor }}
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  ci:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Build with Gradle
        uses: gradle/gradle-build-action@67421db6bd0bf253fb4bd25b31ebb98943c375e1
        with:
          arguments: build

      - name: Publish to Container Registry
        run: |
          GROUP=group-happynewyear
          SERVICE=studynight-backend
          
          IMG=ghcr.io/"$GROUP"/"$SERVICE"
          TAG=$(TZ=":Asia/Seoul" date "+%Y%m%d-%H%M%S")
          
          echo "$GITHUB_TOKEN" | docker login ghcr.io -u "$GITHUB_USERNAME" --password-stdin
          
          docker buildx create --use
          docker buildx build . \
          --platform=linux/amd64,linux/arm64 \
          --tag "$IMG":"$TAG" \
          --tag "$IMG":latest \
          --push

          echo "IMG=$IMG:$TAG" >> $GITHUB_ENV

      - name: Send Result to Slack
        uses: 8398a7/action-slack@v3
        with:
          status: custom
          fields: workflow,took,eventName,repo,ref,commit,author
          custom_payload: |
            {
              attachments: [{
                color: '${{ job.status }}' === 'success' ? 'good' : '${{ job.status }}' === 'failure' ? 'danger' : 'warning',
                text: `GitHub Actions - ${process.env.AS_WORKFLOW} in ${process.env.AS_TOOK}`,
                fields: [{
                  title: 'event',
                  value: `${process.env.AS_EVENT_NAME} on ${process.env.AS_REPO}@${process.env.AS_REF}`
                },
                {
                  title: 'commit',
                  value: `${process.env.AS_COMMIT} by ${process.env.AS_AUTHOR}`
                },
                {
                  title: 'image',
                  value: '${{ env.IMG }}'
                }]
              }]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        if: always()
